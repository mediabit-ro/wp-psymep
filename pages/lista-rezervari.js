import React, { useEffect, useState } from "react";

import Head from "next/head";
import { withAuthSync } from "../utils/auth";
import fetch from "isomorphic-unfetch";
import nextCookie from "next-cookies";
import Router from "next/router";
import Layout from "../components/Layout";
import {
	formatDateHMS,
	formatDateYMDHM,
	formatDateYMD,
	generateProvidersUrl,
} from "../utils";

const Rezerevari = (props) => {
	const [bookings, setBookings] = useState([]);
	const [token, setToken] = useState();
	console.log("props", props);

	useEffect(() => {
		const data = Object.values(props);
		setToken(data.pop());
		setBookings(
			data.map((event) => {
				return { ...event.acf, id: event.id };
			})
		);
	}, []);

	const cancelBookingHandler = (id) => {
		var myHeaders = new Headers();
		myHeaders.append("Authorization", `Bearer ${token}`);

		var requestOptions = {
			method: "DELETE",
			headers: myHeaders,
			redirect: "follow",
		};

		fetch(
			`https://mediabit.ro/booking/wp-json/wp/v2/posts/${id}`,
			requestOptions
		)
			.then((response) => response.json())
			.then((result) => {
				console.log("result", result);
				bookings.splice(
					bookings.findIndex((booking) => booking.id === result.id),
					1
				);
				setBookings([...bookings]);
			})
			.catch((error) => {
				console.log("error", error);
			});
	};
	const cancelBookingRecurrentHandler = (recurrentId) => {
		var myHeaders = new Headers();
		myHeaders.append("Authorization", `Bearer ${token}`);

		var requestOptions = {
			method: "DELETE",
			headers: myHeaders,
			redirect: "follow",
		};

		const bookingsToDelete = bookings
			.filter((booking) => booking.recurrent_id === recurrentId)
			.map((booking) => booking.id);

		console.log("bookingsToDelete", bookingsToDelete);

		bookingsToDelete.forEach((value) => {
			fetch(
				`https://mediabit.ro/booking/wp-json/wp/v2/posts/${value}`,
				requestOptions
			)
				.then((response) => response.json())
				.then((result) => {
					console.log("result", result);
					bookings.splice(
						bookings.findIndex((booking) => booking.id === result.id),
						1
					);
					setBookings([...bookings]);
				})
				.catch((error) => {
					console.log("error", error);
				});
		});
	};

	return (
		<Layout>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<table className='table'>
				<thead>
					<tr>
						<th scope='col'>#</th>
						<th scope='col'>Camera</th>
						<th scope='col'>Data</th>
						<th scope='col'>Recurenta</th>
						<th scope='col'>Anuleaza</th>
						<th scope='col'>Anuleaza recurenta</th>
					</tr>
					{bookings.map((booking, index) => (
						<tr key={Math.random()}>
							<th scope='row'>{index + 1}</th>
							<td>{booking.provider_id}</td>
							<td>{formatDateYMDHM(booking.start_date)}</td>
							<td>{booking.recurrent ? "Da" : "Nu"}</td>
							<td>
								{booking.removing ? (
									<div
										className='spinner-grow'
										style={{ width: "1.1rem", height: "1.1rem" }}
										role='status'></div>
								) : (
									<i
										onClick={() => cancelBookingHandler(booking.id)}
										className='cursor-pointer bi bi-x-lg'></i>
								)}
							</td>
							<td>
								{booking.recurrent &&
									(booking.removingRecurrent ? (
										<div
											className='spinner-grow'
											style={{ width: "1.1rem", height: "1.1rem" }}
											role='status'></div>
									) : (
										<>
											<i
												onClick={() =>
													cancelBookingRecurrentHandler(booking.recurrent_id)
												}
												className='cursor-pointer bi bi-x-lg'></i>
										</>
									))}
							</td>
						</tr>
					))}
				</thead>
				<tbody></tbody>
			</table>
		</Layout>
	);
};

Rezerevari.getInitialProps = (ctx) => {
	const { token, id } = nextCookie(ctx);

	const redirectOnError = () =>
		typeof window !== "undefined"
			? Router.push("/login")
			: ctx.res.writeHead(302, { Location: "/login" }).end();

	var myHeaders = new Headers();
	myHeaders.append("Authorization", `Bearer ${token}`);

	var requestOptions = {
		method: "GET",
		headers: myHeaders,
		redirect: "follow",
	};

	return fetch(
		`https://mediabit.ro/booking/wp-json/wp/v2/posts/?data_end=20240121&data_start=${formatDateYMD(
			new Date()
		)}&status=private&author=${id}&per_page=100`,
		requestOptions
	)
		.then((response) => response.json())
		.then((result) => {
			console.log("res", result);
			return result;
		})
		.catch((error) => {
			console.log("error", error);
			redirectOnError();
		});
};

export default withAuthSync(Rezerevari);
