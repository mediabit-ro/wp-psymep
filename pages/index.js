import { useEffect } from "react";
import Link from "next/link";
import Head from "next/head";
import { withAuthSync } from "../utils/auth";
import fetch from "isomorphic-unfetch";
import nextCookie from "next-cookies";
import Router from "next/router";
import Layout from "../components/Layout";
import Provider from "../components/Provider";
import store from "../store/store";
import { observer } from "mobx-react-lite";
import { toJS } from "mobx";

const Home = observer((props) => {
	console.log("Home props", props);

	useEffect(() => {
		const categories = Object.values(props);
		categories.pop();

		store.locations = categories.filter((item) => item.parent === 0);

		store.providers = categories.filter((item) => item.parent !== 0);
	}, []);

	console.log("Locations", store.locations, toJS(store.providers));

	return (
		<Layout>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<div className='row'>
				{/* Locations loop */}
				{store.locations.map((location) => (
					<div
						key={"dlc" + location.id}
						style={{ maxWidth: "600px" }}
						className='col-lg-6 mb-3'>
						<div className='p-lg-4 p-3 rounded bg-white'>
							<h5>{location.name}</h5>
							<div className='row'>
								{/* Providers loop */}
								{store.providers
									.filter((provider) => provider.parent === location.id)
									.map((provider) => (
										<div
											key={"plc" + provider.id + "dlc" + location.id}
											className='col-6 col-md-4 mb-3'>
											{/* Providers active status */}
											<Provider data={provider} />
										</div>
									))}
							</div>
							{/* Activate location  */}
						</div>
					</div>
				))}
			</div>
			{store.activeProviders.length && (
				<div className='p-3'>
					<Link href='/calendar'>
						<a className='btn btn-primary px-5'>Vezi calendar</a>
					</Link>
				</div>
			)}
		</Layout>
	);
});
Home.getInitialProps = (ctx) => {
	console.log("initialProp");

	const { token } = nextCookie(ctx);

	const redirectOnError = () =>
		typeof window !== "undefined"
			? Router.push("/login")
			: ctx.res.writeHead(302, { Location: "/login" }).end();

	var myHeaders = new Headers();
	myHeaders.append("Authorization", `Bearer ${token}`);

	var requestOptions = {
		method: "GET",
		headers: myHeaders,
		redirect: "follow",
	};

	return fetch(
		"https://mediabit.ro/booking/wp-json/wp/v2/categories?acf_format=standard",
		requestOptions
	)
		.then((response) => response.json())
		.then((result) => {
			console.log("res", result);
			return result;
		})
		.catch((error) => {
			console.log("error", error);
			redirectOnError();
		});

	return { providers, locations };
};

export default withAuthSync(Home);
